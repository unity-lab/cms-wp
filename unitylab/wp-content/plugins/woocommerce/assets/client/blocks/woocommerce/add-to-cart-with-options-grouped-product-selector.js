import*as t from"@woocommerce/stores/woocommerce/cart";import*as e from"@woocommerce/stores/woocommerce/product-data";import*as r from"@wordpress/interactivity";var o={8228:(t,e,r)=>{r.d(e,{q:()=>o});const o=(t,e)=>{if(!t||!Object.keys(t).length||!Array.isArray(e)||0===e.length)return null;const r=Object.entries(t).find((([t,r])=>Object.entries(r.attributes).every((([t,r])=>e.some((e=>!(e.attribute!==t)&&(e.value===r||e.value&&""===r)))))));return r?{...r[1],variation_id:Number(r[0])}:null}},3132:(t,e,r)=>{r.d(e,{O:()=>d,E:()=>c});var o=r(2833),i=(r(4021),r(8228));const a="I acknowledge that using a private store means my plugin will inevitably break on the next store release.",{state:n}=(0,o.store)("woocommerce",{},{lock:a}),{state:s}=(0,o.store)("woocommerce/product-data",{},{lock:a}),c=(t,e)=>{let r,a=t;const{products:n}=(0,o.getConfig)("woocommerce");let s=null;if(e&&e.length>0){if(!n||!n[t])return null;const o=n[t].variations,c=(0,i.q)(o,e);c?.variation_id&&(a=c.variation_id,r=n?.[t]?.variations?.[c?.variation_id],s="variation")}else r=n?.[a],s=r?.type;if("object"!=typeof r||null===r)return null;const c="number"==typeof r.min?r.min:1,d="number"==typeof r.max&&r.max>=1?r.max:1/0,u=r.step||1;return{id:a,...r,min:c,max:d,step:u,type:s}},d=(t,e,r)=>{const o=n.cart?.items.find((e=>{return"variation"===e.type?!(e.id!==t||!e.variation||!r||e.variation.length!==r.length)&&(o=e,i=r,!(!Array.isArray(o.variation)||!Array.isArray(i))&&o.variation.length===i.length&&o.variation.every((({raw_attribute:t,value:e})=>i.some((r=>r.attribute===t&&(r.value.toLowerCase()===e.toLowerCase()||r.value&&""===e)))))):e.id===t;var o,i}));return(o?.quantity||0)+e},{actions:u,state:l}=(0,o.store)("woocommerce/add-to-cart-with-options",{state:{noticeIds:[],get validationErrors(){const t=(0,o.getContext)();return t&&t.validationErrors?t.validationErrors:[]},get isFormValid(){return 0===l.validationErrors.length},get quantity(){return(0,o.getContext)().quantity||{}},get selectedAttributes(){return(0,o.getContext)().selectedAttributes||[]}},actions:{validateQuantity(t,e){if(u.clearErrors("invalid-quantities"),"number"!=typeof e)return;const{selectedAttributes:r}=(0,o.getContext)(),i=c(t,r);if(0===e||i&&(e<i.min||e>i.max)){const{errorMessages:t}=(0,o.getConfig)();u.addError({code:"invalidQuantities",message:t?.invalidQuantities||"",group:"invalid-quantities"})}},setQuantity(t,e){const r=(0,o.getContext)(),{products:i}=(0,o.getConfig)("woocommerce"),a=i?.[t].variations;a?[t,...Object.keys(a)].forEach((t=>{r.quantity[Number(t)]=e})):r.quantity={...r.quantity,[t]:e};const n=c(s.productId,r.selectedAttributes);"grouped"===n?.type?u.validateGroupedProductQuantity():u.validateQuantity(t,e)},addError:t=>{const{validationErrors:e}=l;return e.push(t),t.code},clearErrors:t=>{const{validationErrors:e}=l;if(t){const r=e.filter((e=>e.group!==t));e.splice(0,e.length,...r)}else e.length=0},*addToCart(){yield Promise.resolve().then(r.bind(r,1401));const{selectedAttributes:t}=(0,o.getContext)(),e=s.variationId||s.productId,i=s.variationId?"variation":c(e,t)?.type;if(!i)return;if("grouped"===i)return void(yield u.batchAddToCart());const{quantity:n}=(0,o.getContext)(),l=d(e,n[e],t),{actions:m}=(0,o.store)("woocommerce",{},{lock:a});yield m.addCartItem({id:e,quantity:l,variation:t,type:i},{showCartUpdatesNotices:!1})},*handleSubmit(t){t.preventDefault();const{isFormValid:e}=l;if(e)yield u.addToCart();else{yield Promise.resolve().then(r.bind(r,7908));const{actions:t}=(0,o.store)("woocommerce/store-notices",{},{lock:a}),{noticeIds:e,validationErrors:i}=l;e.forEach((e=>{t.removeNotice(e)})),e.splice(0,e.length);const n=i.map((e=>t.addNotice({notice:e.message,type:"error",dismissible:!0})));e.push(...n)}}}},{lock:a})},7908:t=>{t.exports=import("@woocommerce/stores/store-notices")},1401:e=>{e.exports=t},4021:(t,e,r)=>{var o;t.exports=(o={},r.d(o,{}),o)},2833:(t,e,o)=>{var i,a;t.exports=(i={getConfig:()=>r.getConfig,getContext:()=>r.getContext,store:()=>r.store},a={},o.d(a,i),a)}},i={};function a(t){var e=i[t];if(void 0!==e)return e.exports;var r=i[t]={exports:{}};return o[t](r,r.exports,a),r.exports}a.d=(t,e)=>{for(var r in e)a.o(e,r)&&!a.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},a.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var n=a(2833),s=a(3132);const c="I acknowledge that using a private store means my plugin will inevitably break on the next store release.",{actions:d}=(0,n.store)("woocommerce/add-to-cart-with-options",{actions:{validateGroupedProductQuantity(){d.clearErrors("invalid-quantities");const{errorMessages:t}=(0,n.getConfig)(),e=(0,n.getContext)();Object.values(e.quantity).some((t=>t>0))?Object.entries(e.quantity).some((([t,r])=>{const o=(0,s.E)(Number(t),e.selectedAttributes);return!!o&&0!==r&&(r<o.min||r>o.max)}))&&d.addError({code:"invalidQuantities",message:t?.invalidQuantities||"",group:"invalid-quantities"}):d.addError({code:"groupedProductAddToCartMissingItems",message:t?.groupedProductAddToCartMissingItems||"",group:"invalid-quantities"})},*batchAddToCart(){yield Promise.resolve().then(a.bind(a,1401));const{quantity:t,selectedAttributes:e,groupedProductIds:r}=(0,n.getContext)(),o=[];for(const i of r){if(0===t[i])continue;const r=(0,s.O)(i,t[i]),a=(0,s.E)(Number(i),e);a&&o.push({id:Number(i),quantity:r,variation:e,type:a.type})}const{actions:i}=(0,n.store)("woocommerce",{},{lock:c});yield i.batchAddCartItems(o,{showCartUpdatesNotices:!1})}},callbacks:{validateQuantities(){d.validateGroupedProductQuantity()}}},{lock:c});